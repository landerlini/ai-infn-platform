{{ if .Values.wwwEnabled }}

# Ensure existing bastion namespace
apiVersion: v1
kind: Namespace
metadata:
  name: dashboard

{{ end }}

---

{{ if .Values.wwwEnabled }}

# Create deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
  namespace: dashboard
  labels:
    app: dashboard
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: dashboard
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: dashboard
        tier: service
    spec:
      containers:
      - name: dashboard
        image: petrinir/dashboard:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 80
        command: 
          - /bin/bash
          - -c
        args: 
          - |          
            git clone https://github.com/landerlini/ai-infn-dashboard.git 
            cd ai-infn-dashboard
            python3 -m aiinfn_dash
        env:
          - name: IAM_CLIENT_ID
            value: {{ .Values.jhubIamClientId }}
          - name: IAM_CLIENT_SECRET
            value: {{ .Values.jhubIamClientSecret }}
          - name: IAM_REDIRECT_URI
            value: https://{{ .Values.hostname }}/dash/callback
          - name: FLASK_SECRET
            value: {{ .Values.jhubMetricApiKey }}
          - name: AIINFN_PORT
            value: "80"
            
{{ end }}

---

{{ if .Values.wwwEnabled }}
apiVersion: v1
kind: Service
metadata:
  name: dashboard
  namespace: dashboard
  labels:
    app: dashboard
    tier: service
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: http
  selector:
    app: dashboard


{{ end }}

---

{{ if .Values.wwwEnabled }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: lets-issuer
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
      #nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: dashboard
  namespace: dashboard
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.hostname }}
    http:
      paths:
      - backend:
          service:
            name: dashboard
            port:
              name: http
        path: /dash(/|$)(.*) 
        pathType: ImplementationSpecific

{{ end }}








