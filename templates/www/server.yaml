{{ if .Values.wwwEnabled }}

# Ensure existing bastion namespace
apiVersion: v1
kind: Namespace
metadata:
  name: webserver

{{ end }}

---

{{ if .Values.wwwEnabled }}

# Create deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  namespace: webserver
  labels:
    app: webserver
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: webserver
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: webserver
        tier: service
    spec:
      containers:
      - name: webserver
        image: nginx:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 80


        volumeMounts:
          - name: website
            mountPath: /usr/share/nginx/html
            readOnly: True

      volumes:
        - name: website
          nfs:
            server: {{ .Values.nfsServerAddress }}
            path: {{ .Values.wwwPathToStaticWebsite }} 
{{ end }}

---

{{ if .Values.wwwEnabled }}
apiVersion: v1
kind: Service
metadata:
  name: webserver
  namespace: webserver
  labels:
    app: webserver
    tier: service
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: http
  selector:
    app: webserver


{{ end }}

---

{{ if .Values.wwwEnabled }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: lets-issuer
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  name: webserver
  namespace: webserver
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.hostname }}
    http:
      paths:
      - backend:
          service:
            name: webserver
            port:
              name: http
        path: {{ .Values.wwwPrefix | default "/docs" }} 
        pathType: Prefix

{{ end }}








