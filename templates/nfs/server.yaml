{{- if .Values.nfsServerAddress -}}
apiVersion: v1
kind: Namespace
metadata:
  name: storage
  labels:
    name: storage
{{- end }}

---

{{- if .Values.nfsServerAddress -}}
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: nfs-critical
value: 10
globalDefault: false
description: |
  Priority class for the NFS servers to reduce the probability of eviction on 
  disk pressure.

{{- end }}

---

{{- if .Values.nfsServerAddress -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: storage
spec:
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      priorityClassName: nfs-critical
        
      initContainers:
        - name: init-dir
          image: alpine:latest
          securityContext:
            privileged: true
          command: ["/bin/ash", "-c"]
          args: 
            - |
              mkdir -p /data/nfs
              chmod 777 /data/nfs

          volumeMounts:
            - name: storage
              mountPath: /data

      containers:
        - name: nfs-server
          image: {{ .Values.nfsServerImage }}
          ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
          securityContext:
            privileged: true

          resources:
            requests:
              memory: "64Mi"
              cpu: "125m"
            limits:
              memory: "1Gi"
              cpu: "1"
          
          volumeMounts:
            - name: storage-nfs
              mountPath: {{ .Values.nfsServerInternalMountPath }}
              
        - name: prometheus-client
          image: "harbor.cloud.infn.it/testbed-dm/python-prometheus-exporter:0.1-pre8"
          imagePullPolicy: Always
          ports: 
            - containerPort: 9400

          volumeMounts:
            - name: storage
              mountPath: /exports
              readOnly: true

          env:
            - name: DEBUG
              value: {{ .Values.nfsMetricsDebugMode | quote }}
            - name: MONITORING_VOLUMES
              value: {{ .Values.nfsMetricsMonitoringVolumes | toJson | squote }}
            - name: PORT
              value: {{ .Values.nfsMetricsPort | default "9400" | quote }}
            - name: MONITORING_SUBPATHS
              value: {{ .Values.nfsMetricsMonitoringSubPaths | toJson | squote }}
            - name: MONITORING_PATHS
              value: {{ .Values.nfsMetricsMonitoringPaths | toJson | squote }}


      volumes:
        - name: storage-nfs
          hostPath:
            path: {{ .Values.nfsServerHostPath }}/nfs
            type: DirectoryOrCreate 

        - name: storage
          hostPath:
            path: {{ .Values.nfsServerHostPath }}
            type: DirectoryOrCreate 

      tolerations:
        {{ .Values.nfsServerTolerations | toYaml | nindent 8 }}

      nodeSelector:
        {{ .Values.nfsServerNodeSelector | toYaml | nindent 8 }}

{{- end }}
        
---

{{- if .Values.nfsServerAddress -}}
apiVersion: v1
kind: Service
metadata:
  name: nfs
  namespace: storage
  labels:
    app: nfs
    tier: service
spec:
  type: ClusterIP
  clusterIP: {{ .Values.nfsServerAddress }}
  ports:
  - name: metrics
    port: {{ .Values.nfsMetricsPort }}
  - name: nfs
    port: 2049 
    #nodePort: 32049
  - name: mountd
    port: 20048 # mountd
    #nodePort: 32048
  - name: rpcbind
    port: 111 # rpcbind
    #nodePort: 30111
  selector:
    app: nfs-server # must match with the label of NFS pod

{{- end }}

